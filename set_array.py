# Set는 key값을 주축으로 구성된 자료구조
# dictionary가 있을 때, key값을 저장하는 주소, key값, key를 hash함수로 변환한 테이블, hash로 연결된 value로 구성이 된다.
# Set는 key값과, key값을 저장하는 주소 2가지를 가지고 있다.
# 어떠한 문자가 있을 때 이를 유니코드로 디코딩 하여 바이너리 코드로 변환한다.
# 이에 따른 key값 저장 주소를 결정한다.
# 따라서 문자로 구성된 set를 1개씩 추출할 때, 그 순서는 random하게 뽑힌다.
# 하지만 매번 랜덤으로 뽑히면 어려워 파이썬 3.8버전 부터는 추출되는 순서는 일정하게 유지되도록 만들었다.
# 정리: 문자로 구성된 Set의 원소 1개씩 추출할 때, 그 순서는 랜덤이지만, 한번 결정된 순서는 계속 유지된다.

# 숫자로 구성된 Set는 그 키값을 저장하는 주소는 일렬로 되어 있다. (문자와 달리 디코딩 과정이 없음)
# 따라서 원소 1개씩을 뽑아낼 때, 일관적인 주소로 순차적으로 정렬되어 뽑히게 된다.
# 정리: 숫자로 구성된 Set의 원소 1개씩 추출할 때, 순서는 항상 오름차순으로 정렬되며 뽑힌다.
# (왜냐하면 디코딩 과정이 불필요하여 key를 저장하는 주소는 일관적으로 오름차순으로 나옴)

num_set = {3, 5, 4, 1, 2}
eng_set = {'c', 'a', 'b', 'e', 'd'}
ko_set = {'마', '가', '라', '다', '나'}

for i in num_set:
    print(i)
# 1, 2, 3, 4, 5 (오름차순 정렬)

for j in eng_set:
    print(j)
# d, b, c, e, a (나름 랜덤)

for k in ko_set:
    print(k)
# 가, 라, 다, 마, 나 (나름 랜덤)